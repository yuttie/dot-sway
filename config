input type:keyboard {
    xkb_layout "jp"
    xkb_variant "dvorak"
    xkb_options "ctrl:nocaps,mod:custom"
    xkb_numlock enable
    repeat_delay 300
    repeat_rate 60
}

input type:touchpad {
    tap enabled
    natural_scroll enabled
    drag enabled
    drag_lock enabled
    dwt enabled
}

output * adaptive_sync on

output * scale 1

output * bg ~/wallpaper fill

set $laptop_output eDP-1
bindswitch --reload --locked lid:on output $laptop_output disable
bindswitch --reload --locked lid:off output $laptop_output enable

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Sans 16

# class                 border     background text       indicator  child_border
client.focused          #8badc1    #8badc1    #ffffff    #ffffff    #8badc1
client.focused_inactive #6a96af    #6a96af    #b9ccdf    #ffffff    #6a96af
client.unfocused        #6a96af    #6a96af    #50515c    #ffffff    #6a96af
client.urgent           #eb4d4b    #eb4d4b    #50515c    #eb4d4b    #6a96af
client.placeholder      #6a96af    #6a96af    #50515c    #ffffff    #6a96af
client.background       #ffffff

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l

# Gaps
gaps inner 16
gaps outer 0

# Borders
default_border normal 4
default_floating_border normal 4
titlebar_padding 12 6

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod normal

# Cursor theme and size
seat seat0 xcursor_theme Paper 32

# Don't let focus follow a mouse cursor
focus_follows_mouse no

# Move mouse cursor as you move focus
mouse_warping none

# The middle button over a titlebar kills the window
bindsym button2 kill

# Disable resizing by dragging the border
bindsym --border --exclude-titlebar button1 nop
bindsym --border --exclude-titlebar button3 nop

# start a terminal
bindsym $mod+semicolon exec ~/.local/bin/term start --always-new-process
bindsym $mod+e         exec ~/.local/bin/term start --always-new-process -- nvim
bindsym $mod+w         exec ~/.local/bin/google-chrome-stable

# Screen capture
bindsym Print               exec "grimshot --notify save screen ~/Pictures/screen_$(date +%Y-%m-%d-%H%M%S).png"
bindsym Mod1+Print          exec "grimshot --notify save output ~/Pictures/output_$(date +%Y-%m-%d-%H%M%S).png"
bindsym Shift+Print         exec "grimshot --notify save active ~/Pictures/active_$(date +%Y-%m-%d-%H%M%S).png"
bindsym Control+Shift+Print exec "grimshot --notify save window ~/Pictures/window_$(date +%Y-%m-%d-%H%M%S).png"
bindsym Control+Print       exec "grimshot --notify save area ~/Pictures/area_$(date +%Y-%m-%d-%H%M%S).png"

# kill focused window
bindsym $mod+Control+c kill

# Launching programs
bindsym $mod+r exec env PATH=$HOME/.local/bin:$PATH rofi -no-case-sensitive -matching regex -sort -sorting-method fzf -modi drun#run -show drun -show-icons -drun-show-actions
bindsym $mod+c exec python ~/.config/sway/quick-command

# Rofi
bindsym $mod+Shift+d exec ~/.local/bin/run-if-some "nemo"                                                   "$(fd --type d --type l --no-ignore --owner $USER --exclude /mnt --exclude /snapshot --base-directory / --absolute-path | rofi -no-case-sensitive -matching regex -sort -sorting-method fzf -dmenu -i -p 'Open a directory')"
bindsym $mod+Shift+t exec ~/.local/bin/run-if-some "$HOME/.local/bin/term start --always-new-process --cwd" "$(fd --type d --type l --no-ignore --owner $USER --exclude /mnt --exclude /snapshot --base-directory / --absolute-path | rofi -no-case-sensitive -matching regex -sort -sorting-method fzf -dmenu -i -p 'Open a terminal with a directory')"
bindsym $mod+Shift+p exec ~/.local/bin/run-if-some "xdg-open"                                               "$HOME/Literature/$(fd --type f --type l --no-ignore --extension pdf --base-directory ~/Literature | rofi -no-case-sensitive -matching regex -sort -sorting-method fzf -dmenu -i -p "Open a paper")"

# Mako
bindsym $mod+Control+n exec makoctl mode | grep do-not-disturb && makoctl mode -r do-not-disturb || makoctl mode -a do-not-disturb
bindsym $mod+Control+i exec makoctl invoke
bindsym $mod+Control+d exec makoctl dismiss
bindsym $mod+Control+s exec makoctl restore

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left 64 px
bindsym $mod+Shift+$down move down 64 px
bindsym $mod+Shift+$up move up 64 px
bindsym $mod+Shift+$right move right 64 px

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left 64 px
bindsym $mod+Shift+Down move down 64 px
bindsym $mod+Shift+Up move up 64 px
bindsym $mod+Shift+Right move right 64 px

# split in horizontal orientation
bindsym $mod+Control+v splith

# split in vertical orientation
bindsym $mod+Control+h splitv

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+slash layout toggle split

# make a window sticky
bindsym $mod+Shift+s sticky toggle

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Sort workspaces
bindsym $mod+Control+s exec python ~/.config/sway/i3-sort-ws; exec notify-send --icon=view-sort-ascending-symbolic --expire-time=3000 i3 'Workspaces sorted.'

# switch to another workspace
bindsym $mod+comma workspace prev_on_output
bindsym $mod+period workspace next_on_output
bindsym $mod+Prior workspace prev_on_output
bindsym $mod+Next  workspace next_on_output

# switch between the current and the previously focused one
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth

# switch to another output (display)
bindsym $mod+Control+Left focus output left
bindsym $mod+Control+Down focus output down
bindsym $mod+Control+Up focus output up
bindsym $mod+Control+Right focus output right

# move the whole workspace to another output (display)
bindsym $mod+Shift+Control+Left move workspace to output left
bindsym $mod+Shift+Control+Down move workspace to output down
bindsym $mod+Shift+Control+Up move workspace to output up
bindsym $mod+Shift+Control+Right move workspace to output right

# Backlight
bindsym $mod+F5 exec light -U 25%
bindsym $mod+F6 exec light -A 25%

# switch or move focused container to dynamically selected workspace
bindsym $mod+v exec swaymsg workspace `swaymsg -t get_workspaces | jq -r '.[].name' | rofi -no-case-sensitive -matching fuzzy -sort -sorting-method fzf -dmenu -i -p "workspace"`
bindsym $mod+m exec swaymsg move container to workspace `swaymsg -t get_workspaces | jq -r '.[].name' | rofi -no-case-sensitive -matching fuzzy -sort -sorting-method fzf -dmenu -i -p "workspace"`
bindsym $mod+Shift+m exec ~/.config/sway/move-to-and-focus-workspace

# Lock
bindsym $mod+Control+x exec swaylock -f -e -c 000000
# reload the configuration file
bindsym $mod+Control+r reload; exec notify-send --icon=system-run-symbolic --expire-time=3000 i3 'Configuration reloaded.'
# exit i3 (logs you out of your X session)
bindsym $mod+Control+q exec swaynag -t warning -m 'Do you really want to exit sway?' -B 'Yes, exit sway' 'swaymsg exit'

# Display layouts
bindsym $mod+F1 exec ~/.screenlayout/display-layout-1.sh; exec $HOME/.config/polybar/launch.sh
bindsym $mod+F2 exec ~/.screenlayout/display-layout-2.sh; exec $HOME/.config/polybar/launch.sh
bindsym $mod+F3 exec ~/.screenlayout/display-layout-3.sh; exec $HOME/.config/polybar/launch.sh

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym n           resize shrink width  10 px or 1 ppt
        bindsym w           resize grow   width  10 px or 1 ppt
        bindsym s           resize shrink height 10 px or 1 ppt
        bindsym t           resize grow   height 10 px or 1 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width  10 px or 1 ppt
        bindsym Down        resize grow   height 10 px or 1 ppt
        bindsym Up          resize shrink height 10 px or 1 ppt
        bindsym Right       resize grow   width  10 px or 1 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+Shift+r mode "resize"

# Make specific windows floating by default
for_window [app_id="^org.gnome.Calculator$"] floating enable
for_window [app_id="^wdisplays$"] floating enable
for_window [app_id="^nemo$" title=" Properties$"] floating enable
for_window [app_id="^mpv$"] inhibit_idle visible
for_window [class="^Minecraft"] floating enable
for_window [title="^Cities: Skylines II$"] floating enable
# Authy
for_window [instance="^crx_gaedmjdfmmahhbjefcbgaolhhanlaolb$"] floating enable

# Focus on window activation
focus_on_window_activation urgent

# Update environment variables
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
# exec systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec tmux setenv -g SWAYSOCK "$SWAYSOCK"
exec tmux setenv -g I3SOCK "$I3SOCK"

# Check clamshell mode
exec_always $HOME/.config/sway/check_clamshell_mode.sh

# Autostart
exec xrdb -load ~/.Xresources
exec dunst
exec pasystray
exec nm-applet --indicator
exec blueman-applet
exec dropbox

exec_always killall fcitx5
exec_always killall waybar
exec_always killall swayidle

exec_always fcitx5 -dr
exec_always waybar
exec_always swayidle -w \
    timeout 10  'if pgrep -x swaylock; then swaymsg "output * power off"; fi' \
         resume 'swaymsg "output * power on"' \
    timeout 300 'swaymsg "output * power off"' \
         resume 'swaymsg "output * power on"' \
    timeout 310 'swaylock -f -e -c 000000' \
    before-sleep 'swaylock -f -e -c 000000'
